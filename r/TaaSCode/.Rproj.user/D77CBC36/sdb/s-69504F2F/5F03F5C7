{
    "contents" : "# TaaS \n# MRR Calculator \n\n# Packages \n# --------------------- \n\nrequire(reshape)\nrequire(ggplot2)\n\n# Variables \n# --------------------- \n\n# Input\nMRR <- 30 # Monthly subscription of $30 \nAvrgDuration <- mean(1:2) # Average Contract Duration between 1 and 2 months \nARPA <- MRR * AvrgDuration # Average Monthly Recurring Revenue per Account\nMonths <- 12 #Months of simulation \nCustomers <- 60 #Initial influx of Customers (Month 1)\nMargin <- 0.45 #Average sale margin\nR <- 0.10 # Discount/Interest rate\nAd_Budget <- 200 # Amount spent acquiring customers monthly\n  \n# Customer Churn and Growth \n\nVariationTable <- matrix(0:0, nrow = 2, ncol = 2)\ncolnames(VariationTable) <- c(\"Mean\",\"SD\")\nrownames(VariationTable) <- c(\"Churn\",\"Growth\")\n\nVariationTable[\"Churn\",\"Mean\"] <- 0.10\nVariationTable[\"Churn\",\"SD\"] <- 0.05\nVariationTable[\"Growth\",\"Mean\"] <- 0.00\nVariationTable[\"Growth\",\"SD\"] <- 0.001\n\nVariationTable_s <- paste(VariationTable * 100,'%',sep=\" \")\nVariationTable_f <- matrix(0:0, nrow = 2, ncol = 2)\ncolnames(VariationTable_f) <- c(\"Mean\",\"SD\")\nrownames(VariationTable_f) <- c(\"Churn\",\"Growth\")\n\nVariationTable_f[\"Churn\",\"Mean\"] <- VariationTable_s[1]\nVariationTable_f[\"Churn\",\"SD\"] <- VariationTable_s[2]\nVariationTable_f[\"Growth\",\"Mean\"] <- VariationTable_s[3]\nVariationTable_f[\"Growth\",\"SD\"] <- VariationTable_s[4]\n\n\n\nChurn <- rnorm(1:Months, mean = 0.10, sd = 0.05) # Expected churn rate mean and deviation (%)\nGrowth <- abs(rnorm(1:Months, mean = 0.10, sd = 0.05)) # Expected growth rate mean and deviation (%)\n\n# Revenue Churn and Growth \n\nRevenue_Churn <- rnorm(1:Months, mean = 0.00, sd = 0.001) # Expected Revenue churn rate mean and deviation (%) \nRevenue_Growth <- abs(rnorm(1:Months, mean = 0.00, sd = 0.001)) # Expected Revenue growth rate mean and deviation (%)\n\n# Generator\n# --------------------- \n\n# Initial Vectors \n\nChurned_Customers <- 0\nNew_Customers <- 0\nNet_Customers <- 0\n\nTotal_MRR <- MRR * Customers\nChurned_MRR <- 0\nExpanded_MRR <- 0\nNet_MRR <- 0\nMoving_MRR <- MRR\n\nTime <- c(1:Months)\nCustomer_Lifetime <- 1/mean(Churn)\n\nLTV <- (ARPA[1] * Margin * Customer_Lifetime)/((1+R/(Customer_Lifetime))^(Customer_Lifetime))\nCAC <- Ad_Budget/(MRR[1] * Margin) \nRecover_CAC <- 0\n\n\nfor (i in 1:Months) {\n  # Customers\n  Churned_Customers[i] <- Customers[i]*Churn[i]\n  New_Customers[i] <- Customers[i]*Growth[i]\n  Net_Customers[i] <- -Churned_Customers[i] + New_Customers[i]\n  Customers[i+1] <- Customers[i] + Net_Customers[i]\n  \n  # MRR\n  Total_MRR[i] = MRR * Customers[i]\n  Churned_MRR <- Revenue_Churn * MRR\n  Expanded_MRR <- Revenue_Growth * MRR\n  Net_MRR <- -Churned_MRR + Expanded_MRR\n  Moving_MRR[i + 1] <- MRR + Net_MRR[i]\n  \n  # ARPA\n  ARPA[i+1] <- ((MRR * Customers[i]) + (MRR * Net_Customers[i]))/(Customers[i+1])\n\n  #LTV\n  LTV[i] <- (ARPA[i] * Margin * Customer_Lifetime)/((1+R/(Customer_Lifetime))^(Customer_Lifetime))\n  \n  #CAC\n  CAC[1:12] <- Ad_Budget/mean(New_Customers)\n  LTV_CAC <- LTV[1:12]/CAC[1:12]\n  Recover_CAC[i] <- CAC[i]/(mean(MRR) * Margin)\n}\n\n\n#Cohort Tables\n# --------------------- \n\n#Customers\nCustomer_Matrix <- matrix(0:0,nrow=Months,ncol=Months)\ncolnames(Customer_Matrix) <- c(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nCustomer_Matrix[1,1] <- Customers[1]\n\nfor (i in 1:(Months-1)) {\n  Customer_Matrix[i + 1, i + 1] <- New_Customers[i+1]\n  Customer_Matrix[,i+1] <- Customer_Matrix[,i] * (1 - Churn[i])\n  Customer_Matrix[i + 1, i + 1] <- New_Customers[i+1]\n}\n\n\n#MRR\nMRR_Matrix <- matrix(0:0,nrow=Months,ncol=(Months))\ncolnames(MRR_Matrix) <- c(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nMRR_Matrix[1,1] <- Customers[1] * MRR\n\nfor (i in 1:(Months-1)) {\n  MRR_Matrix[,i + 1] <- Customer_Matrix[,i + 1] * MRR\n}\n\nprint(MRR_Matrix)\n\n\n# Storage\nMRR_Data <- data.frame(1:12, Customers[1:12], Churned_Customers[1:12], New_Customers[1:12], Net_Customers[1:12], MRR[1:12], Total_MRR[1:12], ARPA[1:12], LTV[1:12], CAC[1:12], Recover_CAC[1:12], LTV_CAC[1:12],  \n                       row.names = c(\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"))\nnames(MRR_Data) <- c(\"Months\",\"Customers\", \"Churned Customers\", \"New Customers\", \"Net Customers\", \"MRR\", \"Total MRR\", \"ARPA\", \"LTV\", \"CAC\", \"Recover CAC\" , \"LTV/CAC\")\n\nwrite.csv(MRR_Data, file=\"MRR_Data_Test.csv\")\n\n# References\n# --------------------- \n\n# mean(MRR_Data$LTV)\n\n# Plots \n# --------------------- \n\nlibrary(ggplot2)\n\nCustomer_Frame <- data.frame(round(Customer_Matrix))\ncolnames(Customer_Frame) <- c(1:Months)\nCustomer_Frame[\"Cohort\"] <- paste(\"Cohort\", 1:Months, sep = \" \")\nCustomer_Frame_M$Cohort_f = factor(Customer_Frame_M$Cohort, levels = paste(\"Cohort\", 1:Months, sep = \" \")) # Re order levels in right order\nCustomer_Frame_M <- melt(Customer_Frame, id=\"Cohort\") #Reshape Data Frame\ncolnames(Customer_Frame_M) <- c(\"Cohort\",\"Month\",\"Customers\")\n\nfit <- glm(y~x)\n\n\n# c1 <- ggplot(Customer_Frame_M, aes(x = Month, y = Customers, fill = Cohort))\n\nCu <- ggplot(Customer_Frame_M, aes(x = Month, y = Customers)) \n\nCu + geom_bar(stat=\"identity\") + facet_wrap(~ Cohort_f) + geom_point() + theme_bw()\n# Cohorts, Facetted \n\n\n# Customer Graph (All cases)\n# MRR Graph (All cases)\n# ARPA graph (All Cases)\n# ARPA vs Customer churn/growth rate (c) vs MRR churn/growth rate (c)\n  \n  \n  \n\n",
    "created" : 1401421881851.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3173103921",
    "id" : "5F03F5C7",
    "lastKnownWriteTime" : 1401784046,
    "path" : "C:/Users/Vivek/Dropbox/Work/TaaS/TaaSCode/Draft10.R",
    "project_path" : "Draft10.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}